sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output

            srcDir 'src/integration-test/java'
        }

        resources.srcDir file('src/integration-test/resources/')
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

idea {
    module {
        testSourceDirs += sourceSets.integrationTest.java.srcDirs
        testResourceDirs += sourceSets.integrationTest.resources.srcDirs
        scopes.TEST.plus += [configurations.integrationTestCompile]
    }
}

dependencies {
    integrationTestImplementation('org.springframework.kafka:spring-kafka-test')

    integrationTestCompileOnly 'org.projectlombok:lombok:1.18.20'
    integrationTestAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

task integrationTest(type: Test) {
    group = 'verification'

    useJUnitPlatform()

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    
    outputs.upToDateWhen { false }

    check.dependsOn it
    shouldRunAfter test
}

